DECLARE
    TYPE T_POLE IS VARRAY(10) OF INTEGER;
    POLE T_POLE;
BEGIN
    POLE := T_POLE(1,2,3,4,5);
    DBMS_OUTPUT.PUT_LINE('POCET PRVKOV: ' || POLE.COUNT());
    FOR I IN POLE.FIRST()..POLE.LAST() LOOP
        DBMS_OUTPUT.PUT_LINE(I || '. PRVOK: ' || POLE(I));
    END LOOP;
    POLE.EXTEND();
    POLE(POLE.LAST()) := 6;
    DBMS_OUTPUT.PUT_LINE('POCET PRVKOV: ' || POLE.COUNT());
    FOR J IN POLE.FIRST()..POLE.LAST() LOOP
        DBMS_OUTPUT.PUT_LINE(J || '. PRVOK: ' || POLE(J));
    END LOOP;
    POLE.DELETE(3);
END;
/

DECLARE
    TYPE T_POLE IS TABLE OF INTEGER;
    POLE T_POLE;
    K INT := 1;
BEGIN
    POLE := T_POLE(1,2,3,4,5);
    DBMS_OUTPUT.PUT_LINE('POCET PRVKOV: ' || POLE.COUNT());
    FOR I IN POLE.FIRST()..POLE.LAST() LOOP
        DBMS_OUTPUT.PUT_LINE(I || '. PRVOK: ' || POLE(I));
    END LOOP;
    POLE.EXTEND();
    POLE(POLE.LAST()) := 6;
    DBMS_OUTPUT.PUT_LINE('POCET PRVKOV: ' || POLE.COUNT());
    FOR J IN POLE.FIRST()..POLE.LAST() LOOP
        DBMS_OUTPUT.PUT_LINE(J || '. PRVOK: ' || POLE(J));
    END LOOP;
    POLE.DELETE(3);
    POLE.DELETE(4);
    
--    FOR J IN 1 .. pole.count LOOP 
--        DBMS_OUTPUT.PUT_LINE(J || '. PRVOK: ' || POLE(J));
--    END LOOP;
    
--    FOR J IN pole.first .. pole.last LOOP
--        DBMS_OUTPUT.PUT_LINE(J || '. PRVOK: ' || POLE(J));
--    END LOOP;
    
    WHILE pole.exists(K) LOOP
        DBMS_OUTPUT.PUT_LINE(K || '. PRVOK: ' || POLE(K));
        K := K+1;
    END LOOP;
END;
/

CREATE OR REPLACE TYPE T_ADRESA AS OBJECT (
    ULICA   VARCHAR2(20),
    PSC     CHAR(5),
    MESTO   VARCHAR(20),
    
    MEMBER PROCEDURE VYPIS
);
/

CREATE OR REPLACE TYPE BODY T_ADRESA AS
    MEMBER PROCEDURE VYPIS IS
    BEGIN
        DBMS_OUTPUT.PUT_LINE(SELF.ULICA || ', ' || SELF.PSC || ' ' || SELF.MESTO);
    END VYPIS;
END;
/

CREATE OR REPLACE TYPE T_OSOBA AS OBJECT (
    MENO        VARCHAR(20),
    PRIEZVISKO  VARCHAR(30),
    ROD_CISLO   CHAR(11),
    ADRESA      T_ADRESA,
    
    MEMBER PROCEDURE VYPIS_ADRESU
);
/

CREATE OR REPLACE TYPE BODY T_OSOBA AS
    MEMBER PROCEDURE VYPIS_ADRESU IS
    BEGIN
        DBMS_OUTPUT.PUT_LINE(SELF.MENO || ' ' || SELF.PRIEZVISKO);
        SELF.ADRESA.VYPIS;
    END VYPIS_ADRESU;
END;
/

DECLARE
    OSOBA T_OSOBA := T_OSOBA('Dianka', 'Ondrejkovièová', '985614/2322', T_ADRESA('Na Tehelnej 1735', '03852', 'Suèany'));
BEGIN
    OSOBA.VYPIS_ADRESU;
END;
/

CREATE TABLE OSOBY OF T_OSOBA;

INSERT INTO OSOBY 
VALUES ('Dianka', 'Ondrejkovièová', '985614/2322', T_ADRESA('Na Tehelnej 1735', '03852', 'Suèany'));

INSERT INTO OSOBY 
VALUES ('Lukáš', 'Lipták', '991209/7547', T_ADRESA('Rumunskej Armády 3', '03601', 'Martin'));

INSERT INTO OSOBY 
VALUES ('Andrej', 'Rábek', '970713/6646', T_ADRESA('Gorkého 38', '03601', 'Martin'));

SELECT * FROM OSOBY;

SELECT VALUE(P) FROM OSOBY P;
/

DECLARE
    CURSOR CUR_OSOBY IS SELECT VALUE(P) AS OS FROM OSOBY P;
    OSOBA T_OSOBA;
BEGIN
    FOR REC IN CUR_OSOBY LOOP
        OSOBA := REC.OS;
        OSOBA.VYPIS_ADRESU;
        DBMS_OUTPUT.PUT_LINE('');
    END LOOP;
END;
/

DECLARE
    TYPE T_LUDIA IS TABLE OF T_OSOBA;
    KOL_OSOBY T_LUDIA;
BEGIN
    SELECT VALUE(P) BULK COLLECT INTO KOL_OSOBY FROM OSOBY P;
    FOR I IN KOL_OSOBY.FIRST()..KOL_OSOBY.LAST() LOOP
        KOL_OSOBY(I).VYPIS_ADRESU;
        DBMS_OUTPUT.PUT_LINE('');
    END LOOP;
END;
/

